<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="586" onload="init(evt)" viewBox="0 0 1200 586" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="586" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --subprocesses -o profile.svg --pid 16000</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="575.00"> </text><svg id="frames" x="10" width="1180" total_samples="45119"><g><title>_parse_incoming_messages (debugpy\common\messaging.py:1349) (16,005 samples, 35.47%)</title><rect x="0.0000%" y="196" width="35.4729%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="16005"/><text x="0.2500%" y="206.50">_parse_incoming_messages (debugpy\common\messaging.py:1349)</text></g><g><title>_parse_incoming_message (debugpy\common\messaging.py:1417) (16,005 samples, 35.47%)</title><rect x="0.0000%" y="212" width="35.4729%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="16005"/><text x="0.2500%" y="222.50">_parse_incoming_message (debugpy\common\messaging.py:1417)</text></g><g><title>read_json (debugpy\common\messaging.py:234) (16,005 samples, 35.47%)</title><rect x="0.0000%" y="228" width="35.4729%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="16005"/><text x="0.2500%" y="238.50">read_json (debugpy\common\messaging.py:234)</text></g><g><title>_read_line (debugpy\common\messaging.py:194) (16,005 samples, 35.47%)</title><rect x="0.0000%" y="244" width="35.4729%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="16005"/><text x="0.2500%" y="254.50">_read_line (debugpy\common\messaging.py:194)</text></g><g><title>readinto (socket.py:704) (14,550 samples, 32.25%)</title><rect x="3.2248%" y="260" width="32.2481%" height="15" fill="rgb(208,68,35)" fg:x="1455" fg:w="14550"/><text x="3.4748%" y="270.50">readinto (socket.py:704)</text></g><g><title>process 11036:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; --type=renderer --disable-color-correct-rendering --field-trial-handle=1636,14959030791483507297,624461208736091333,131072 --disable-features=CookiesWithoutSameSiteMustBeSecure,SameSiteByDefaultCookies,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand --lang=en-GB --user-data-dir=&quot;C:\Users\Dan\AppData\Roaming\Code&quot; --standard-schemes=vscode-webview,vscode-file --secure-schemes=vscode-webview,vscode-file --bypasscsp-schemes --cors-schemes=vscode-webview,vscode-file --fetch-schemes=vscode-webview,vscode-file --service-worker-schemes=vscode-webview --streaming-schemes --app-user-model-id=Microsoft.VisualStudioCode --app-path=&quot;C:\Program Files\Microsoft VS Code\resources\app&quot; --no-sandbox --no-zygote --device-scale-factor=1 --num-raster-threads=2 --enable-main-frame-before-activation --renderer-client-id=5 --no-v8-untrusted-code-mitigations --mojo-platform-channel-handle=2520 /prefetch:1 --vscode-window-config=vscode:719f04cb-4d1d-4e7e-9771-4cfc38bc33f6&quot; (24,735 samples, 54.82%)</title><rect x="0.0000%" y="84" width="54.8217%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="24735"/><text x="0.2500%" y="94.50">process 11036:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; --type=renderer --disable-col..</text></g><g><title>process 23048:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; --inspect-port=0 &quot;c:\Program Files\Microsoft VS Code\resources\app\out\bootstrap-fork&quot; --type=extensionHost --skipWorkspaceStorageLock&quot; (24,735 samples, 54.82%)</title><rect x="0.0000%" y="100" width="54.8217%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="24735"/><text x="0.2500%" y="110.50">process 23048:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; --inspect-port=0 &quot;c:\Program ..</text></g><g><title>process 27340:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\adapter&quot; (24,735 samples, 54.82%)</title><rect x="0.0000%" y="116" width="54.8217%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="24735"/><text x="0.2500%" y="126.50">process 27340:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe c:\..</text></g><g><title>process 26444:&quot;C:\Users\Dan\AppData\Local\Programs\Python\Python39\python.exe c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\adapter&quot; (24,735 samples, 54.82%)</title><rect x="0.0000%" y="132" width="54.8217%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="24735"/><text x="0.2500%" y="142.50">process 26444:&quot;C:\Users\Dan\AppData\Local\Programs\Python\Python39\python.exe c:\Users\Dan..</text></g><g><title>_bootstrap (threading.py:930) (24,735 samples, 54.82%)</title><rect x="0.0000%" y="148" width="54.8217%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="24735"/><text x="0.2500%" y="158.50">_bootstrap (threading.py:930)</text></g><g><title>_bootstrap_inner (threading.py:973) (24,735 samples, 54.82%)</title><rect x="0.0000%" y="164" width="54.8217%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="24735"/><text x="0.2500%" y="174.50">_bootstrap_inner (threading.py:973)</text></g><g><title>run (threading.py:910) (24,735 samples, 54.82%)</title><rect x="0.0000%" y="180" width="54.8217%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="24735"/><text x="0.2500%" y="190.50">run (threading.py:910)</text></g><g><title>accept_worker (debugpy\common\sockets.py:105) (8,730 samples, 19.35%)</title><rect x="35.4729%" y="196" width="19.3488%" height="15" fill="rgb(216,20,37)" fg:x="16005" fg:w="8730"/><text x="35.7229%" y="206.50">accept_worker (debugpy\common\..</text></g><g><title>accept (socket.py:293) (8,730 samples, 19.35%)</title><rect x="35.4729%" y="212" width="19.3488%" height="15" fill="rgb(206,188,39)" fg:x="16005" fg:w="8730"/><text x="35.7229%" y="222.50">accept (socket.py:293)</text></g><g><title>_parse_incoming_messages (debugpy\common\messaging.py:1349) (1,455 samples, 3.22%)</title><rect x="54.8217%" y="212" width="3.2248%" height="15" fill="rgb(217,207,13)" fg:x="24735" fg:w="1455"/><text x="55.0717%" y="222.50">_pa..</text></g><g><title>_parse_incoming_message (debugpy\common\messaging.py:1417) (1,455 samples, 3.22%)</title><rect x="54.8217%" y="228" width="3.2248%" height="15" fill="rgb(231,73,38)" fg:x="24735" fg:w="1455"/><text x="55.0717%" y="238.50">_pa..</text></g><g><title>read_json (debugpy\common\messaging.py:234) (1,455 samples, 3.22%)</title><rect x="54.8217%" y="244" width="3.2248%" height="15" fill="rgb(225,20,46)" fg:x="24735" fg:w="1455"/><text x="55.0717%" y="254.50">rea..</text></g><g><title>_read_line (debugpy\common\messaging.py:194) (1,455 samples, 3.22%)</title><rect x="54.8217%" y="260" width="3.2248%" height="15" fill="rgb(210,31,41)" fg:x="24735" fg:w="1455"/><text x="55.0717%" y="270.50">_re..</text></g><g><title>readinto (socket.py:704) (1,455 samples, 3.22%)</title><rect x="54.8217%" y="276" width="3.2248%" height="15" fill="rgb(221,200,47)" fg:x="24735" fg:w="1455"/><text x="55.0717%" y="286.50">rea..</text></g><g><title>_bootstrap (threading.py:930) (2,910 samples, 6.45%)</title><rect x="54.8217%" y="164" width="6.4496%" height="15" fill="rgb(226,26,5)" fg:x="24735" fg:w="2910"/><text x="55.0717%" y="174.50">_bootstr..</text></g><g><title>_bootstrap_inner (threading.py:973) (2,910 samples, 6.45%)</title><rect x="54.8217%" y="180" width="6.4496%" height="15" fill="rgb(249,33,26)" fg:x="24735" fg:w="2910"/><text x="55.0717%" y="190.50">_bootstr..</text></g><g><title>run (threading.py:910) (2,910 samples, 6.45%)</title><rect x="54.8217%" y="196" width="6.4496%" height="15" fill="rgb(235,183,28)" fg:x="24735" fg:w="2910"/><text x="55.0717%" y="206.50">run (thr..</text></g><g><title>wait_for_exit (debugpy\launcher\debuggee.py:196) (1,455 samples, 3.22%)</title><rect x="58.0465%" y="212" width="3.2248%" height="15" fill="rgb(221,5,38)" fg:x="26190" fg:w="1455"/><text x="58.2965%" y="222.50">wai..</text></g><g><title>wait (subprocess.py:1189) (1,455 samples, 3.22%)</title><rect x="58.0465%" y="228" width="3.2248%" height="15" fill="rgb(247,18,42)" fg:x="26190" fg:w="1455"/><text x="58.2965%" y="238.50">wai..</text></g><g><title>_wait (subprocess.py:1470) (1,455 samples, 3.22%)</title><rect x="58.0465%" y="244" width="3.2248%" height="15" fill="rgb(241,131,45)" fg:x="26190" fg:w="1455"/><text x="58.2965%" y="254.50">_wa..</text></g><g><title>_run_module_as_main (runpy.py:197) (1,455 samples, 3.22%)</title><rect x="61.2713%" y="164" width="3.2248%" height="15" fill="rgb(249,31,29)" fg:x="27645" fg:w="1455"/><text x="61.5213%" y="174.50">_ru..</text></g><g><title>_run_code (runpy.py:87) (1,455 samples, 3.22%)</title><rect x="61.2713%" y="180" width="3.2248%" height="15" fill="rgb(225,111,53)" fg:x="27645" fg:w="1455"/><text x="61.5213%" y="190.50">_ru..</text></g><g><title>&lt;module&gt; (debugpy\launcher\__main__.py:97) (1,455 samples, 3.22%)</title><rect x="61.2713%" y="196" width="3.2248%" height="15" fill="rgb(238,160,17)" fg:x="27645" fg:w="1455"/><text x="61.5213%" y="206.50">&lt;mo..</text></g><g><title>main (debugpy\launcher\__main__.py:54) (1,455 samples, 3.22%)</title><rect x="61.2713%" y="212" width="3.2248%" height="15" fill="rgb(214,148,48)" fg:x="27645" fg:w="1455"/><text x="61.5213%" y="222.50">mai..</text></g><g><title>wait (debugpy\common\messaging.py:1216) (1,455 samples, 3.22%)</title><rect x="61.2713%" y="228" width="3.2248%" height="15" fill="rgb(232,36,49)" fg:x="27645" fg:w="1455"/><text x="61.5213%" y="238.50">wai..</text></g><g><title>join (threading.py:1053) (1,455 samples, 3.22%)</title><rect x="61.2713%" y="244" width="3.2248%" height="15" fill="rgb(209,103,24)" fg:x="27645" fg:w="1455"/><text x="61.5213%" y="254.50">joi..</text></g><g><title>_wait_for_tstate_lock (threading.py:1069) (1,455 samples, 3.22%)</title><rect x="61.2713%" y="260" width="3.2248%" height="15" fill="rgb(229,88,8)" fg:x="27645" fg:w="1455"/><text x="61.5213%" y="270.50">_wa..</text></g><g><title>__call__ (_pydev_bundle\pydev_monkey.py:1054) (1,455 samples, 3.22%)</title><rect x="64.4961%" y="196" width="3.2248%" height="15" fill="rgb(213,181,19)" fg:x="29100" fg:w="1455"/><text x="64.7461%" y="206.50">__c..</text></g><g><title>_bootstrap (threading.py:930) (1,455 samples, 3.22%)</title><rect x="64.4961%" y="212" width="3.2248%" height="15" fill="rgb(254,191,54)" fg:x="29100" fg:w="1455"/><text x="64.7461%" y="222.50">_bo..</text></g><g><title>_bootstrap_inner (threading.py:973) (1,455 samples, 3.22%)</title><rect x="64.4961%" y="228" width="3.2248%" height="15" fill="rgb(241,83,37)" fg:x="29100" fg:w="1455"/><text x="64.7461%" y="238.50">_bo..</text></g><g><title>run (concurrent\futures\process.py:317) (1,455 samples, 3.22%)</title><rect x="64.4961%" y="244" width="3.2248%" height="15" fill="rgb(233,36,39)" fg:x="29100" fg:w="1455"/><text x="64.7461%" y="254.50">run..</text></g><g><title>wait_result_broken_or_wakeup (concurrent\futures\process.py:377) (1,455 samples, 3.22%)</title><rect x="64.4961%" y="260" width="3.2248%" height="15" fill="rgb(226,3,54)" fg:x="29100" fg:w="1455"/><text x="64.7461%" y="270.50">wai..</text></g><g><title>wait (multiprocessing\connection.py:884) (1,455 samples, 3.22%)</title><rect x="64.4961%" y="276" width="3.2248%" height="15" fill="rgb(245,192,40)" fg:x="29100" fg:w="1455"/><text x="64.7461%" y="286.50">wai..</text></g><g><title>_exhaustive_wait (multiprocessing\connection.py:816) (1,455 samples, 3.22%)</title><rect x="64.4961%" y="292" width="3.2248%" height="15" fill="rgb(238,167,29)" fg:x="29100" fg:w="1455"/><text x="64.7461%" y="302.50">_ex..</text></g><g><title>_on_run (_pydevd_bundle\pydevd_comm.py:237) (1,455 samples, 3.22%)</title><rect x="67.7209%" y="244" width="3.2248%" height="15" fill="rgb(232,182,51)" fg:x="30555" fg:w="1455"/><text x="67.9709%" y="254.50">_on..</text></g><g><title>_read_line (_pydevd_bundle\pydevd_comm.py:219) (1,455 samples, 3.22%)</title><rect x="67.7209%" y="260" width="3.2248%" height="15" fill="rgb(231,60,39)" fg:x="30555" fg:w="1455"/><text x="67.9709%" y="270.50">_re..</text></g><g><title>_bootstrap (threading.py:930) (1,460 samples, 3.24%)</title><rect x="67.7209%" y="196" width="3.2359%" height="15" fill="rgb(208,69,12)" fg:x="30555" fg:w="1460"/><text x="67.9709%" y="206.50">_bo..</text></g><g><title>_bootstrap_inner (threading.py:973) (1,460 samples, 3.24%)</title><rect x="67.7209%" y="212" width="3.2359%" height="15" fill="rgb(235,93,37)" fg:x="30555" fg:w="1460"/><text x="67.9709%" y="222.50">_bo..</text></g><g><title>run (_pydevd_bundle\pydevd_daemon_thread.py:46) (1,460 samples, 3.24%)</title><rect x="67.7209%" y="228" width="3.2359%" height="15" fill="rgb(213,116,39)" fg:x="30555" fg:w="1460"/><text x="67.9709%" y="238.50">run..</text></g><g><title>_run_module_as_main (runpy.py:197) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="196" width="3.2248%" height="15" fill="rgb(222,207,29)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="206.50">_ru..</text></g><g><title>_run_code (runpy.py:87) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="212" width="3.2248%" height="15" fill="rgb(206,96,30)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="222.50">_ru..</text></g><g><title>&lt;module&gt; (debugpy\__main__.py:45) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="228" width="3.2248%" height="15" fill="rgb(218,138,4)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="238.50">&lt;mo..</text></g><g><title>main (debugpy\server\cli.py:444) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="244" width="3.2248%" height="15" fill="rgb(250,191,14)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="254.50">mai..</text></g><g><title>run_file (debugpy\server\cli.py:285) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="260" width="3.2248%" height="15" fill="rgb(239,60,40)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="270.50">run..</text></g><g><title>run_path (runpy.py:268) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="276" width="3.2248%" height="15" fill="rgb(206,27,48)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="286.50">run..</text></g><g><title>_run_module_code (runpy.py:97) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="292" width="3.2248%" height="15" fill="rgb(225,35,8)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="302.50">_ru..</text></g><g><title>_run_code (runpy.py:87) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="308" width="3.2248%" height="15" fill="rgb(250,213,24)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="318.50">_ru..</text></g><g><title>&lt;module&gt; (DatabaseSearch.py:113) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="324" width="3.2248%" height="15" fill="rgb(247,123,22)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="334.50">&lt;mo..</text></g><g><title>run (cProfile.py:16) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="340" width="3.2248%" height="15" fill="rgb(231,138,38)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="350.50">run..</text></g><g><title>run (profile.py:53) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="356" width="3.2248%" height="15" fill="rgb(231,145,46)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="366.50">run..</text></g><g><title>run (cProfile.py:95) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="372" width="3.2248%" height="15" fill="rgb(251,118,11)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="382.50">run..</text></g><g><title>runctx (cProfile.py:100) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="388" width="3.2248%" height="15" fill="rgb(217,147,25)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="398.50">run..</text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="404" width="3.2248%" height="15" fill="rgb(247,81,37)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="414.50">&lt;mo..</text></g><g><title>main (DatabaseSearch.py:103) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="420" width="3.2248%" height="15" fill="rgb(209,12,38)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="430.50">mai..</text></g><g><title>DatabaseSearch (DatabaseSearch.py:76) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="436" width="3.2248%" height="15" fill="rgb(227,1,9)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="446.50">Dat..</text></g><g><title>__init__ (ChargeDisproportation.py:49) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="452" width="3.2248%" height="15" fill="rgb(248,47,43)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="462.50">__i..</text></g><g><title>MultiThreadedCheckForCD (ChargeDisproportation.py:110) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="468" width="3.2248%" height="15" fill="rgb(221,10,30)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="478.50">Mul..</text></g><g><title>__exit__ (concurrent\futures\_base.py:636) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="484" width="3.2248%" height="15" fill="rgb(210,229,1)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="494.50">__e..</text></g><g><title>shutdown (concurrent\futures\process.py:740) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="500" width="3.2248%" height="15" fill="rgb(222,148,37)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="510.50">shu..</text></g><g><title>join (threading.py:1053) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="516" width="3.2248%" height="15" fill="rgb(234,67,33)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="526.50">joi..</text></g><g><title>_wait_for_tstate_lock (threading.py:1069) (1,455 samples, 3.22%)</title><rect x="70.9568%" y="532" width="3.2248%" height="15" fill="rgb(247,98,35)" fg:x="32015" fg:w="1455"/><text x="71.2068%" y="542.50">_wa..</text></g><g><title>__getattr__ (core\periodic_table.py:1041) (88 samples, 0.20%)</title><rect x="74.7446%" y="532" width="0.1950%" height="15" fill="rgb(247,138,52)" fg:x="33724" fg:w="88"/><text x="74.9946%" y="542.50"></text></g><g><title>__getattr__ (core\periodic_table.py:1044) (56 samples, 0.12%)</title><rect x="74.9396%" y="532" width="0.1241%" height="15" fill="rgb(213,79,30)" fg:x="33812" fg:w="56"/><text x="75.1896%" y="542.50"></text></g><g><title>__eq__ (core\periodic_table.py:1056) (260 samples, 0.58%)</title><rect x="74.5650%" y="516" width="0.5763%" height="15" fill="rgb(246,177,23)" fg:x="33643" fg:w="260"/><text x="74.8150%" y="526.50"></text></g><g><title>oxi_state (core\periodic_table.py:1120) (62 samples, 0.14%)</title><rect x="75.1901%" y="532" width="0.1374%" height="15" fill="rgb(230,62,27)" fg:x="33925" fg:w="62"/><text x="75.4401%" y="542.50"></text></g><g><title>__eq__ (core\periodic_table.py:1057) (102 samples, 0.23%)</title><rect x="75.1413%" y="516" width="0.2261%" height="15" fill="rgb(216,154,8)" fg:x="33903" fg:w="102"/><text x="75.3913%" y="526.50"></text></g><g><title>__getattr__ (core\periodic_table.py:1041) (49 samples, 0.11%)</title><rect x="75.7464%" y="548" width="0.1086%" height="15" fill="rgb(244,35,45)" fg:x="34176" fg:w="49"/><text x="75.9964%" y="558.50"></text></g><g><title>__str__ (core\periodic_table.py:1179) (132 samples, 0.29%)</title><rect x="75.6533%" y="532" width="0.2926%" height="15" fill="rgb(251,115,12)" fg:x="34134" fg:w="132"/><text x="75.9033%" y="542.50"></text></g><g><title>__str__ (core\periodic_table.py:1180) (68 samples, 0.15%)</title><rect x="75.9458%" y="532" width="0.1507%" height="15" fill="rgb(240,54,50)" fg:x="34266" fg:w="68"/><text x="76.1958%" y="542.50"></text></g><g><title>__str__ (core\periodic_table.py:1181) (53 samples, 0.12%)</title><rect x="76.0965%" y="532" width="0.1175%" height="15" fill="rgb(233,84,52)" fg:x="34334" fg:w="53"/><text x="76.3465%" y="542.50"></text></g><g><title>__str__ (core\periodic_table.py:1182) (163 samples, 0.36%)</title><rect x="76.2140%" y="532" width="0.3613%" height="15" fill="rgb(207,117,47)" fg:x="34387" fg:w="163"/><text x="76.4640%" y="542.50"></text></g><g><title>__hash__ (core\periodic_table.py:1070) (559 samples, 1.24%)</title><rect x="75.4826%" y="516" width="1.2389%" height="15" fill="rgb(249,43,39)" fg:x="34057" fg:w="559"/><text x="75.7326%" y="526.50"></text></g><g><title>__init__ (core\periodic_table.py:1006) (54 samples, 0.12%)</title><rect x="76.7216%" y="516" width="0.1197%" height="15" fill="rgb(209,38,44)" fg:x="34616" fg:w="54"/><text x="76.9716%" y="526.50"></text></g><g><title>__new__ (enum.py:670) (51 samples, 0.11%)</title><rect x="77.1094%" y="548" width="0.1130%" height="15" fill="rgb(236,212,23)" fg:x="34791" fg:w="51"/><text x="77.3594%" y="558.50"></text></g><g><title>__init__ (core\periodic_table.py:1034) (216 samples, 0.48%)</title><rect x="76.8412%" y="516" width="0.4787%" height="15" fill="rgb(242,79,21)" fg:x="34670" fg:w="216"/><text x="77.0912%" y="526.50"></text></g><g><title>__call__ (enum.py:384) (130 samples, 0.29%)</title><rect x="77.0318%" y="532" width="0.2881%" height="15" fill="rgb(211,96,35)" fg:x="34756" fg:w="130"/><text x="77.2818%" y="542.50"></text></g><g><title>_get_oxid_state_guesses (core\composition.py:896) (1,447 samples, 3.21%)</title><rect x="74.1971%" y="484" width="3.2071%" height="15" fill="rgb(253,215,40)" fg:x="33477" fg:w="1447"/><text x="74.4471%" y="494.50">_ge..</text></g><g><title>&lt;listcomp&gt; (core\composition.py:896) (1,446 samples, 3.20%)</title><rect x="74.1993%" y="500" width="3.2049%" height="15" fill="rgb(211,81,21)" fg:x="33478" fg:w="1446"/><text x="74.4493%" y="510.50">&lt;li..</text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="308" width="3.2248%" height="15" fill="rgb(208,190,38)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="318.50">&lt;mo..</text></g><g><title>spawn_main (multiprocessing\spawn.py:116) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="324" width="3.2248%" height="15" fill="rgb(235,213,38)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="334.50">spa..</text></g><g><title>_main (multiprocessing\spawn.py:129) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="340" width="3.2248%" height="15" fill="rgb(237,122,38)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="350.50">_ma..</text></g><g><title>_bootstrap (multiprocessing\process.py:315) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="356" width="3.2248%" height="15" fill="rgb(244,218,35)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="366.50">_bo..</text></g><g><title>run (multiprocessing\process.py:108) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="372" width="3.2248%" height="15" fill="rgb(240,68,47)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="382.50">run..</text></g><g><title>_process_worker (concurrent\futures\process.py:243) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="388" width="3.2248%" height="15" fill="rgb(210,16,53)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="398.50">_pr..</text></g><g><title>CheckForCDTaskMaster (ChargeDisproportation.py:63) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="404" width="3.2248%" height="15" fill="rgb(235,124,12)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="414.50">Che..</text></g><g><title>CheckForCD (ChargeDisproportation.py:73) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="420" width="3.2248%" height="15" fill="rgb(224,169,11)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="430.50">Che..</text></g><g><title>SiteCentredCO (ChargeDisproportation.py:24) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="436" width="3.2248%" height="15" fill="rgb(250,166,2)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="446.50">Sit..</text></g><g><title>OxidationStateCalc (ChargeDisproportation.py:15) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="452" width="3.2248%" height="15" fill="rgb(242,216,29)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="462.50">Oxi..</text></g><g><title>add_charges_from_oxi_state_guesses (core\composition.py:778) (1,455 samples, 3.22%)</title><rect x="74.1816%" y="468" width="3.2248%" height="15" fill="rgb(230,116,27)" fg:x="33470" fg:w="1455"/><text x="74.4316%" y="478.50">add..</text></g><g><title>process 13548:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe -c &quot;import sys (2,910 samples, 6.45%)</title><rect x="74.1816%" y="196" width="6.4496%" height="15" fill="rgb(228,99,48)" fg:x="33470" fg:w="2910"/><text x="74.4316%" y="206.50">process ..</text></g><g><title> sys.path.insert(0, r&apos;c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\_vendored\pydevd&apos;) (2,910 samples, 6.45%)</title><rect x="74.1816%" y="212" width="6.4496%" height="15" fill="rgb(253,11,6)" fg:x="33470" fg:w="2910"/><text x="74.4316%" y="222.50"> sys.pat..</text></g><g><title> import pydevd (2,910 samples, 6.45%)</title><rect x="74.1816%" y="228" width="6.4496%" height="15" fill="rgb(247,143,39)" fg:x="33470" fg:w="2910"/><text x="74.4316%" y="238.50"> import ..</text></g><g><title> pydevd.PydevdCustomization.DEFAULT_PROTOCOL=&apos;http_json&apos; (2,910 samples, 6.45%)</title><rect x="74.1816%" y="244" width="6.4496%" height="15" fill="rgb(236,97,10)" fg:x="33470" fg:w="2910"/><text x="74.4316%" y="254.50"> pydevd...</text></g><g><title> pydevd.settrace(host=&apos;127.0.0.1&apos;, port=65366, suspend=False, trace_only_current_thread=False, patch_multiprocessing=True, access_token=None, client_access_token=&apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, __setup_holder__={&apos;client&apos;: &apos;127.0.0.1&apos;, &apos;client-access-token&apos;: &apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, &apos;json-dap-http&apos;: True, &apos;multiprocess&apos;: True, &apos;port&apos;: 65366, &apos;ppid&apos;: 24784, &apos;server&apos;: False, &apos;skip-notify-stdin&apos;: True}) (2,910 samples, 6.45%)</title><rect x="74.1816%" y="260" width="6.4496%" height="15" fill="rgb(233,208,19)" fg:x="33470" fg:w="2910"/><text x="74.4316%" y="270.50"> pydevd...</text></g><g><title> from multiprocessing.spawn import spawn_main (2,910 samples, 6.45%)</title><rect x="74.1816%" y="276" width="6.4496%" height="15" fill="rgb(216,164,2)" fg:x="33470" fg:w="2910"/><text x="74.4316%" y="286.50"> from mu..</text></g><g><title> spawn_main(parent_pid=24784, pipe_handle=2992)&quot; --multiprocessing-fork&quot; (2,910 samples, 6.45%)</title><rect x="74.1816%" y="292" width="6.4496%" height="15" fill="rgb(220,129,5)" fg:x="33470" fg:w="2910"/><text x="74.4316%" y="302.50"> spawn_m..</text></g><g><title>_bootstrap (threading.py:930) (1,455 samples, 3.22%)</title><rect x="77.4064%" y="308" width="3.2248%" height="15" fill="rgb(242,17,10)" fg:x="34925" fg:w="1455"/><text x="77.6564%" y="318.50">_bo..</text></g><g><title>_bootstrap_inner (threading.py:973) (1,455 samples, 3.22%)</title><rect x="77.4064%" y="324" width="3.2248%" height="15" fill="rgb(242,107,0)" fg:x="34925" fg:w="1455"/><text x="77.6564%" y="334.50">_bo..</text></g><g><title>run (_pydevd_bundle\pydevd_daemon_thread.py:46) (1,455 samples, 3.22%)</title><rect x="77.4064%" y="340" width="3.2248%" height="15" fill="rgb(251,28,31)" fg:x="34925" fg:w="1455"/><text x="77.6564%" y="350.50">run..</text></g><g><title>_on_run (_pydevd_bundle\pydevd_comm.py:237) (1,455 samples, 3.22%)</title><rect x="77.4064%" y="356" width="3.2248%" height="15" fill="rgb(233,223,10)" fg:x="34925" fg:w="1455"/><text x="77.6564%" y="366.50">_on..</text></g><g><title>_read_line (_pydevd_bundle\pydevd_comm.py:219) (1,455 samples, 3.22%)</title><rect x="77.4064%" y="372" width="3.2248%" height="15" fill="rgb(215,21,27)" fg:x="34925" fg:w="1455"/><text x="77.6564%" y="382.50">_re..</text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="308" width="3.2248%" height="15" fill="rgb(232,23,21)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="318.50">&lt;mo..</text></g><g><title>spawn_main (multiprocessing\spawn.py:116) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="324" width="3.2248%" height="15" fill="rgb(244,5,23)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="334.50">spa..</text></g><g><title>_main (multiprocessing\spawn.py:129) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="340" width="3.2248%" height="15" fill="rgb(226,81,46)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="350.50">_ma..</text></g><g><title>_bootstrap (multiprocessing\process.py:315) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="356" width="3.2248%" height="15" fill="rgb(247,70,30)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="366.50">_bo..</text></g><g><title>run (multiprocessing\process.py:108) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="372" width="3.2248%" height="15" fill="rgb(212,68,19)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="382.50">run..</text></g><g><title>_process_worker (concurrent\futures\process.py:237) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="388" width="3.2248%" height="15" fill="rgb(240,187,13)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="398.50">_pr..</text></g><g><title>get (multiprocessing\queues.py:102) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="404" width="3.2248%" height="15" fill="rgb(223,113,26)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="414.50">get..</text></g><g><title>__enter__ (multiprocessing\synchronize.py:95) (1,455 samples, 3.22%)</title><rect x="80.6312%" y="420" width="3.2248%" height="15" fill="rgb(206,192,2)" fg:x="36380" fg:w="1455"/><text x="80.8812%" y="430.50">__e..</text></g><g><title>_on_run (_pydevd_bundle\pydevd_comm.py:237) (1,455 samples, 3.22%)</title><rect x="83.8560%" y="356" width="3.2248%" height="15" fill="rgb(241,108,4)" fg:x="37835" fg:w="1455"/><text x="84.1060%" y="366.50">_on..</text></g><g><title>_read_line (_pydevd_bundle\pydevd_comm.py:219) (1,455 samples, 3.22%)</title><rect x="83.8560%" y="372" width="3.2248%" height="15" fill="rgb(247,173,49)" fg:x="37835" fg:w="1455"/><text x="84.1060%" y="382.50">_re..</text></g><g><title>process 1448:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe -c &quot;import sys (2,914 samples, 6.46%)</title><rect x="80.6312%" y="196" width="6.4585%" height="15" fill="rgb(224,114,35)" fg:x="36380" fg:w="2914"/><text x="80.8812%" y="206.50">process ..</text></g><g><title> sys.path.insert(0, r&apos;c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\_vendored\pydevd&apos;) (2,914 samples, 6.46%)</title><rect x="80.6312%" y="212" width="6.4585%" height="15" fill="rgb(245,159,27)" fg:x="36380" fg:w="2914"/><text x="80.8812%" y="222.50"> sys.pat..</text></g><g><title> import pydevd (2,914 samples, 6.46%)</title><rect x="80.6312%" y="228" width="6.4585%" height="15" fill="rgb(245,172,44)" fg:x="36380" fg:w="2914"/><text x="80.8812%" y="238.50"> import ..</text></g><g><title> pydevd.PydevdCustomization.DEFAULT_PROTOCOL=&apos;http_json&apos; (2,914 samples, 6.46%)</title><rect x="80.6312%" y="244" width="6.4585%" height="15" fill="rgb(236,23,11)" fg:x="36380" fg:w="2914"/><text x="80.8812%" y="254.50"> pydevd...</text></g><g><title> pydevd.settrace(host=&apos;127.0.0.1&apos;, port=65366, suspend=False, trace_only_current_thread=False, patch_multiprocessing=True, access_token=None, client_access_token=&apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, __setup_holder__={&apos;client&apos;: &apos;127.0.0.1&apos;, &apos;client-access-token&apos;: &apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, &apos;json-dap-http&apos;: True, &apos;multiprocess&apos;: True, &apos;port&apos;: 65366, &apos;ppid&apos;: 24784, &apos;server&apos;: False, &apos;skip-notify-stdin&apos;: True}) (2,914 samples, 6.46%)</title><rect x="80.6312%" y="260" width="6.4585%" height="15" fill="rgb(205,117,38)" fg:x="36380" fg:w="2914"/><text x="80.8812%" y="270.50"> pydevd...</text></g><g><title> from multiprocessing.spawn import spawn_main (2,914 samples, 6.46%)</title><rect x="80.6312%" y="276" width="6.4585%" height="15" fill="rgb(237,72,25)" fg:x="36380" fg:w="2914"/><text x="80.8812%" y="286.50"> from mu..</text></g><g><title> spawn_main(parent_pid=24784, pipe_handle=2916)&quot; --multiprocessing-fork&quot; (2,914 samples, 6.46%)</title><rect x="80.6312%" y="292" width="6.4585%" height="15" fill="rgb(244,70,9)" fg:x="36380" fg:w="2914"/><text x="80.8812%" y="302.50"> spawn_m..</text></g><g><title>_bootstrap (threading.py:930) (1,459 samples, 3.23%)</title><rect x="83.8560%" y="308" width="3.2337%" height="15" fill="rgb(217,125,39)" fg:x="37835" fg:w="1459"/><text x="84.1060%" y="318.50">_bo..</text></g><g><title>_bootstrap_inner (threading.py:973) (1,459 samples, 3.23%)</title><rect x="83.8560%" y="324" width="3.2337%" height="15" fill="rgb(235,36,10)" fg:x="37835" fg:w="1459"/><text x="84.1060%" y="334.50">_bo..</text></g><g><title>run (_pydevd_bundle\pydevd_daemon_thread.py:46) (1,459 samples, 3.23%)</title><rect x="83.8560%" y="340" width="3.2337%" height="15" fill="rgb(251,123,47)" fg:x="37835" fg:w="1459"/><text x="84.1060%" y="350.50">run..</text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="308" width="3.2248%" height="15" fill="rgb(221,13,13)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="318.50">&lt;mo..</text></g><g><title>spawn_main (multiprocessing\spawn.py:116) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="324" width="3.2248%" height="15" fill="rgb(238,131,9)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="334.50">spa..</text></g><g><title>_main (multiprocessing\spawn.py:129) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="340" width="3.2248%" height="15" fill="rgb(211,50,8)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="350.50">_ma..</text></g><g><title>_bootstrap (multiprocessing\process.py:315) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="356" width="3.2248%" height="15" fill="rgb(245,182,24)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="366.50">_bo..</text></g><g><title>run (multiprocessing\process.py:108) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="372" width="3.2248%" height="15" fill="rgb(242,14,37)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="382.50">run..</text></g><g><title>_process_worker (concurrent\futures\process.py:237) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="388" width="3.2248%" height="15" fill="rgb(246,228,12)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="398.50">_pr..</text></g><g><title>get (multiprocessing\queues.py:102) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="404" width="3.2248%" height="15" fill="rgb(213,55,15)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="414.50">get..</text></g><g><title>__enter__ (multiprocessing\synchronize.py:95) (1,455 samples, 3.22%)</title><rect x="87.0897%" y="420" width="3.2248%" height="15" fill="rgb(209,9,3)" fg:x="39294" fg:w="1455"/><text x="87.3397%" y="430.50">__e..</text></g><g><title>_on_run (_pydevd_bundle\pydevd_comm.py:237) (1,455 samples, 3.22%)</title><rect x="90.3145%" y="356" width="3.2248%" height="15" fill="rgb(230,59,30)" fg:x="40749" fg:w="1455"/><text x="90.5645%" y="366.50">_on..</text></g><g><title>_read_line (_pydevd_bundle\pydevd_comm.py:219) (1,455 samples, 3.22%)</title><rect x="90.3145%" y="372" width="3.2248%" height="15" fill="rgb(209,121,21)" fg:x="40749" fg:w="1455"/><text x="90.5645%" y="382.50">_re..</text></g><g><title>process 23448:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe -c &quot;import sys (2,912 samples, 6.45%)</title><rect x="87.0897%" y="196" width="6.4540%" height="15" fill="rgb(220,109,13)" fg:x="39294" fg:w="2912"/><text x="87.3397%" y="206.50">process ..</text></g><g><title> sys.path.insert(0, r&apos;c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\_vendored\pydevd&apos;) (2,912 samples, 6.45%)</title><rect x="87.0897%" y="212" width="6.4540%" height="15" fill="rgb(232,18,1)" fg:x="39294" fg:w="2912"/><text x="87.3397%" y="222.50"> sys.pat..</text></g><g><title> import pydevd (2,912 samples, 6.45%)</title><rect x="87.0897%" y="228" width="6.4540%" height="15" fill="rgb(215,41,42)" fg:x="39294" fg:w="2912"/><text x="87.3397%" y="238.50"> import ..</text></g><g><title> pydevd.PydevdCustomization.DEFAULT_PROTOCOL=&apos;http_json&apos; (2,912 samples, 6.45%)</title><rect x="87.0897%" y="244" width="6.4540%" height="15" fill="rgb(224,123,36)" fg:x="39294" fg:w="2912"/><text x="87.3397%" y="254.50"> pydevd...</text></g><g><title> pydevd.settrace(host=&apos;127.0.0.1&apos;, port=65366, suspend=False, trace_only_current_thread=False, patch_multiprocessing=True, access_token=None, client_access_token=&apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, __setup_holder__={&apos;client&apos;: &apos;127.0.0.1&apos;, &apos;client-access-token&apos;: &apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, &apos;json-dap-http&apos;: True, &apos;multiprocess&apos;: True, &apos;port&apos;: 65366, &apos;ppid&apos;: 24784, &apos;server&apos;: False, &apos;skip-notify-stdin&apos;: True}) (2,912 samples, 6.45%)</title><rect x="87.0897%" y="260" width="6.4540%" height="15" fill="rgb(240,125,3)" fg:x="39294" fg:w="2912"/><text x="87.3397%" y="270.50"> pydevd...</text></g><g><title> from multiprocessing.spawn import spawn_main (2,912 samples, 6.45%)</title><rect x="87.0897%" y="276" width="6.4540%" height="15" fill="rgb(205,98,50)" fg:x="39294" fg:w="2912"/><text x="87.3397%" y="286.50"> from mu..</text></g><g><title> spawn_main(parent_pid=24784, pipe_handle=2996)&quot; --multiprocessing-fork&quot; (2,912 samples, 6.45%)</title><rect x="87.0897%" y="292" width="6.4540%" height="15" fill="rgb(205,185,37)" fg:x="39294" fg:w="2912"/><text x="87.3397%" y="302.50"> spawn_m..</text></g><g><title>_bootstrap (threading.py:930) (1,457 samples, 3.23%)</title><rect x="90.3145%" y="308" width="3.2292%" height="15" fill="rgb(238,207,15)" fg:x="40749" fg:w="1457"/><text x="90.5645%" y="318.50">_bo..</text></g><g><title>_bootstrap_inner (threading.py:973) (1,457 samples, 3.23%)</title><rect x="90.3145%" y="324" width="3.2292%" height="15" fill="rgb(213,199,42)" fg:x="40749" fg:w="1457"/><text x="90.5645%" y="334.50">_bo..</text></g><g><title>run (_pydevd_bundle\pydevd_daemon_thread.py:46) (1,457 samples, 3.23%)</title><rect x="90.3145%" y="340" width="3.2292%" height="15" fill="rgb(235,201,11)" fg:x="40749" fg:w="1457"/><text x="90.5645%" y="350.50">run..</text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="308" width="3.2248%" height="15" fill="rgb(207,46,11)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="318.50">&lt;mo..</text></g><g><title>spawn_main (multiprocessing\spawn.py:116) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="324" width="3.2248%" height="15" fill="rgb(241,35,35)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="334.50">spa..</text></g><g><title>_main (multiprocessing\spawn.py:129) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="340" width="3.2248%" height="15" fill="rgb(243,32,47)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="350.50">_ma..</text></g><g><title>_bootstrap (multiprocessing\process.py:315) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="356" width="3.2248%" height="15" fill="rgb(247,202,23)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="366.50">_bo..</text></g><g><title>run (multiprocessing\process.py:108) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="372" width="3.2248%" height="15" fill="rgb(219,102,11)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="382.50">run..</text></g><g><title>_process_worker (concurrent\futures\process.py:237) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="388" width="3.2248%" height="15" fill="rgb(243,110,44)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="398.50">_pr..</text></g><g><title>get (multiprocessing\queues.py:103) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="404" width="3.2248%" height="15" fill="rgb(222,74,54)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="414.50">get..</text></g><g><title>recv_bytes (multiprocessing\connection.py:221) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="420" width="3.2248%" height="15" fill="rgb(216,99,12)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="430.50">rec..</text></g><g><title>_recv_bytes (multiprocessing\connection.py:310) (1,455 samples, 3.22%)</title><rect x="93.5437%" y="436" width="3.2248%" height="15" fill="rgb(226,22,26)" fg:x="42206" fg:w="1455"/><text x="93.7937%" y="446.50">_re..</text></g><g><title>_on_run (_pydevd_bundle\pydevd_comm.py:237) (1,455 samples, 3.22%)</title><rect x="96.7685%" y="356" width="3.2248%" height="15" fill="rgb(217,163,10)" fg:x="43661" fg:w="1455"/><text x="97.0185%" y="366.50">_on..</text></g><g><title>_read_line (_pydevd_bundle\pydevd_comm.py:219) (1,455 samples, 3.22%)</title><rect x="96.7685%" y="372" width="3.2248%" height="15" fill="rgb(213,25,53)" fg:x="43661" fg:w="1455"/><text x="97.0185%" y="382.50">_re..</text></g><g><title>all (45,119 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(252,105,26)" fg:x="0" fg:w="45119"/><text x="0.2500%" y="62.50"></text></g><g><title>process 16000:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; &quot; (45,119 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(220,39,43)" fg:x="0" fg:w="45119"/><text x="0.2500%" y="78.50">process 16000:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; &quot;</text></g><g><title>process 21632:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; --type=renderer --disable-color-correct-rendering --field-trial-handle=1636,14959030791483507297,624461208736091333,131072 --disable-features=CookiesWithoutSameSiteMustBeSecure,SameSiteByDefaultCookies,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand --lang=en-GB --user-data-dir=&quot;C:\Users\Dan\AppData\Roaming\Code&quot; --standard-schemes=vscode-webview,vscode-file --secure-schemes=vscode-webview,vscode-file --bypasscsp-schemes --cors-schemes=vscode-webview,vscode-file --fetch-schemes=vscode-webview,vscode-file --service-worker-schemes=vscode-webview --streaming-schemes --app-user-model-id=Microsoft.VisualStudioCode --app-path=&quot;C:\Program Files\Microsoft VS Code\resources\app&quot; --no-sandbox --no-zygote --disable-blink-features=Auxclick --device-scale-factor=1 --num-raster-threads=2 --enable-main-frame-before-activation --renderer-client-id=7 --no-v8-untrusted-code-mitigations --mojo-platform-channel-handle=3500 /prefetch:1 --vscode-window-config=vscode:d10ee814-901e-4356-9a5b-a6f1f338fc18&quot; (20,384 samples, 45.18%)</title><rect x="54.8217%" y="84" width="45.1783%" height="15" fill="rgb(229,68,48)" fg:x="24735" fg:w="20384"/><text x="55.0717%" y="94.50">process 21632:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; --type=render..</text></g><g><title>process 19016:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; &quot;c:\Program Files\Microsoft VS Code\resources\app\out\bootstrap-fork&quot; --type=ptyHost&quot; (20,384 samples, 45.18%)</title><rect x="54.8217%" y="100" width="45.1783%" height="15" fill="rgb(252,8,32)" fg:x="24735" fg:w="20384"/><text x="55.0717%" y="110.50">process 19016:&quot;&quot;C:\Program Files\Microsoft VS Code\Code.exe&quot; &quot;c:\Program F..</text></g><g><title>process 15048:&quot;C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe&quot; (20,384 samples, 45.18%)</title><rect x="54.8217%" y="116" width="45.1783%" height="15" fill="rgb(223,20,43)" fg:x="24735" fg:w="20384"/><text x="55.0717%" y="126.50">process 15048:&quot;C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe&quot;</text></g><g><title>process 19484:&quot;&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe&quot; c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\launcher 65367 -- c:\Users\Dan\Documents\Chemistry\Masters\DatabaseSearch\DatabaseSearchGit\DatabaseSearch.py&quot; (20,384 samples, 45.18%)</title><rect x="54.8217%" y="132" width="45.1783%" height="15" fill="rgb(229,81,49)" fg:x="24735" fg:w="20384"/><text x="55.0717%" y="142.50">process 19484:&quot;&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scrip..</text></g><g><title>process 8072:&quot;C:\Users\Dan\AppData\Local\Programs\Python\Python39\python.exe c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\launcher 65367 -- c:\Users\Dan\Documents\Chemistry\Masters\DatabaseSearch\DatabaseSearchGit\DatabaseSearch.py&quot; (20,384 samples, 45.18%)</title><rect x="54.8217%" y="148" width="45.1783%" height="15" fill="rgb(236,28,36)" fg:x="24735" fg:w="20384"/><text x="55.0717%" y="158.50">process 8072:&quot;C:\Users\Dan\AppData\Local\Programs\Python\Python39\python.e..</text></g><g><title>process 13108:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy --connect 127.0.0.1:65366 --configure-qt none --adapter-access-token 5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995 c:\Users\Dan\Documents\Chemistry\Masters\DatabaseSearch\DatabaseSearchGit\DatabaseSearch.py&quot; (16,019 samples, 35.50%)</title><rect x="64.4961%" y="164" width="35.5039%" height="15" fill="rgb(249,185,26)" fg:x="29100" fg:w="16019"/><text x="64.7461%" y="174.50">process 13108:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit..</text></g><g><title>process 24784:&quot;C:\Users\Dan\AppData\Local\Programs\Python\Python39\python.exe c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy --connect 127.0.0.1:65366 --configure-qt none --adapter-access-token 5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995 c:\Users\Dan\Documents\Chemistry\Masters\DatabaseSearch\DatabaseSearchGit\DatabaseSearch.py&quot; (16,019 samples, 35.50%)</title><rect x="64.4961%" y="180" width="35.5039%" height="15" fill="rgb(249,174,33)" fg:x="29100" fg:w="16019"/><text x="64.7461%" y="190.50">process 24784:&quot;C:\Users\Dan\AppData\Local\Programs\Python\..</text></g><g><title>process 26480:&quot;C:\Users\Dan\.virtualenvs\DatabaseSearchGit-B38GCEHx\Scripts\python.exe -c &quot;import sys (2,913 samples, 6.46%)</title><rect x="93.5437%" y="196" width="6.4563%" height="15" fill="rgb(233,201,37)" fg:x="42206" fg:w="2913"/><text x="93.7937%" y="206.50">process ..</text></g><g><title> sys.path.insert(0, r&apos;c:\Users\Dan\.vscode\extensions\ms-python.python-2021.11.1422169775\pythonFiles\lib\python\debugpy\_vendored\pydevd&apos;) (2,913 samples, 6.46%)</title><rect x="93.5437%" y="212" width="6.4563%" height="15" fill="rgb(221,78,26)" fg:x="42206" fg:w="2913"/><text x="93.7937%" y="222.50"> sys.pat..</text></g><g><title> import pydevd (2,913 samples, 6.46%)</title><rect x="93.5437%" y="228" width="6.4563%" height="15" fill="rgb(250,127,30)" fg:x="42206" fg:w="2913"/><text x="93.7937%" y="238.50"> import ..</text></g><g><title> pydevd.PydevdCustomization.DEFAULT_PROTOCOL=&apos;http_json&apos; (2,913 samples, 6.46%)</title><rect x="93.5437%" y="244" width="6.4563%" height="15" fill="rgb(230,49,44)" fg:x="42206" fg:w="2913"/><text x="93.7937%" y="254.50"> pydevd...</text></g><g><title> pydevd.settrace(host=&apos;127.0.0.1&apos;, port=65366, suspend=False, trace_only_current_thread=False, patch_multiprocessing=True, access_token=None, client_access_token=&apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, __setup_holder__={&apos;client&apos;: &apos;127.0.0.1&apos;, &apos;client-access-token&apos;: &apos;5f2521387747c350f5d45bc8e6793790794b3ec317fa6a48893e7981402bd995&apos;, &apos;json-dap-http&apos;: True, &apos;multiprocess&apos;: True, &apos;port&apos;: 65366, &apos;ppid&apos;: 24784, &apos;server&apos;: False, &apos;skip-notify-stdin&apos;: True}) (2,913 samples, 6.46%)</title><rect x="93.5437%" y="260" width="6.4563%" height="15" fill="rgb(229,67,23)" fg:x="42206" fg:w="2913"/><text x="93.7937%" y="270.50"> pydevd...</text></g><g><title> from multiprocessing.spawn import spawn_main (2,913 samples, 6.46%)</title><rect x="93.5437%" y="276" width="6.4563%" height="15" fill="rgb(249,83,47)" fg:x="42206" fg:w="2913"/><text x="93.7937%" y="286.50"> from mu..</text></g><g><title> spawn_main(parent_pid=24784, pipe_handle=2888)&quot; --multiprocessing-fork&quot; (2,913 samples, 6.46%)</title><rect x="93.5437%" y="292" width="6.4563%" height="15" fill="rgb(215,43,3)" fg:x="42206" fg:w="2913"/><text x="93.7937%" y="302.50"> spawn_m..</text></g><g><title>_bootstrap (threading.py:930) (1,458 samples, 3.23%)</title><rect x="96.7685%" y="308" width="3.2315%" height="15" fill="rgb(238,154,13)" fg:x="43661" fg:w="1458"/><text x="97.0185%" y="318.50">_bo..</text></g><g><title>_bootstrap_inner (threading.py:973) (1,458 samples, 3.23%)</title><rect x="96.7685%" y="324" width="3.2315%" height="15" fill="rgb(219,56,2)" fg:x="43661" fg:w="1458"/><text x="97.0185%" y="334.50">_bo..</text></g><g><title>run (_pydevd_bundle\pydevd_daemon_thread.py:46) (1,458 samples, 3.23%)</title><rect x="96.7685%" y="340" width="3.2315%" height="15" fill="rgb(233,0,4)" fg:x="43661" fg:w="1458"/><text x="97.0185%" y="350.50">run..</text></g></svg></svg>